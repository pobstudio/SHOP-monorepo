/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers';
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface PrintServiceV2Interface extends ethers.utils.Interface {
  functions: {
    'buy(address,uint256,address,uint256,bytes32)': FunctionFragment;
    'config(address,uint256)': FunctionFragment;
    'orderId()': FunctionFragment;
    'owner()': FunctionFragment;
    'renounceOwnership()': FunctionFragment;
    'setInStock(address,uint256,bool)': FunctionFragment;
    'setPrice(address,uint256,uint256)': FunctionFragment;
    'setProducts(address,tuple[])': FunctionFragment;
    'setTreasury(address)': FunctionFragment;
    'transferOwnership(address)': FunctionFragment;
    'treasury()': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'buy',
    values: [string, BigNumberish, string, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'config',
    values: [string, BigNumberish],
  ): string;
  encodeFunctionData(functionFragment: 'orderId', values?: undefined): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'renounceOwnership',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'setInStock',
    values: [string, BigNumberish, boolean],
  ): string;
  encodeFunctionData(
    functionFragment: 'setPrice',
    values: [string, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'setProducts',
    values: [string, { id: string; price: BigNumberish; inStock: boolean }[]],
  ): string;
  encodeFunctionData(functionFragment: 'setTreasury', values: [string]): string;
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [string],
  ): string;
  encodeFunctionData(functionFragment: 'treasury', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'buy', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'config', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'orderId', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'renounceOwnership',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'setInStock', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setPrice', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'setProducts',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setTreasury',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'transferOwnership',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(functionFragment: 'treasury', data: BytesLike): Result;

  events: {
    'OwnershipTransferred(address,address)': EventFragment;
    'PrintOrderReceived(uint256,bytes32,uint256,address,uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'PrintOrderReceived'): EventFragment;
}

export class PrintServiceV2 extends Contract {
  'connect'(signerOrProvider: Signer | Provider | string): this;
  'attach'(addressOrName: string): this;
  'deployed'(): Promise<this>;

  'on'(event: EventFilter | string, listener: Listener): this;
  'once'(event: EventFilter | string, listener: Listener): this;
  'addListener'(eventName: EventFilter | string, listener: Listener): this;
  'removeAllListeners'(eventName: EventFilter | string): this;
  'removeListener'(eventName: any, listener: Listener): this;

  'interface': PrintServiceV2Interface;

  'functions': {
    buy(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    'buy(address,uint256,address,uint256,bytes32)'(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<ContractTransaction>;

    config(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [string, BigNumber, boolean] & {
        id: string;
        price: BigNumber;
        inStock: boolean;
      }
    >;

    'config(address,uint256)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [string, BigNumber, boolean] & {
        id: string;
        price: BigNumber;
        inStock: boolean;
      }
    >;

    orderId(overrides?: CallOverrides): Promise<[BigNumber]>;

    'orderId()'(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    'owner()'(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>;

    setInStock(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setInStock(address,uint256,bool)'(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    setPrice(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setPrice(address,uint256,uint256)'(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    setProducts(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setProducts(address,tuple[])'(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    setTreasury(
      _treasury: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'setTreasury(address)'(
      _treasury: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<ContractTransaction>;

    treasury(overrides?: CallOverrides): Promise<[string]>;

    'treasury()'(overrides?: CallOverrides): Promise<[string]>;
  };

  'buy'(
    _currency: string,
    _productIndex: BigNumberish,
    _collection: string,
    _tokenId: BigNumberish,
    _orderHash: BytesLike,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  'buy(address,uint256,address,uint256,bytes32)'(
    _currency: string,
    _productIndex: BigNumberish,
    _collection: string,
    _tokenId: BigNumberish,
    _orderHash: BytesLike,
    overrides?: PayableOverrides,
  ): Promise<ContractTransaction>;

  'config'(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<
    [string, BigNumber, boolean] & {
      id: string;
      price: BigNumber;
      inStock: boolean;
    }
  >;

  'config(address,uint256)'(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<
    [string, BigNumber, boolean] & {
      id: string;
      price: BigNumber;
      inStock: boolean;
    }
  >;

  'orderId'(overrides?: CallOverrides): Promise<BigNumber>;

  'orderId()'(overrides?: CallOverrides): Promise<BigNumber>;

  'owner'(overrides?: CallOverrides): Promise<string>;

  'owner()'(overrides?: CallOverrides): Promise<string>;

  'renounceOwnership'(overrides?: Overrides): Promise<ContractTransaction>;

  'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>;

  'setInStock'(
    _currency: string,
    _productIndex: BigNumberish,
    _inStock: boolean,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setInStock(address,uint256,bool)'(
    _currency: string,
    _productIndex: BigNumberish,
    _inStock: boolean,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setPrice'(
    _currency: string,
    _productIndex: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setPrice(address,uint256,uint256)'(
    _currency: string,
    _productIndex: BigNumberish,
    _price: BigNumberish,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setProducts'(
    _currency: string,
    _products: { id: string; price: BigNumberish; inStock: boolean }[],
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setProducts(address,tuple[])'(
    _currency: string,
    _products: { id: string; price: BigNumberish; inStock: boolean }[],
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setTreasury'(
    _treasury: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'setTreasury(address)'(
    _treasury: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'transferOwnership'(
    newOwner: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'transferOwnership(address)'(
    newOwner: string,
    overrides?: Overrides,
  ): Promise<ContractTransaction>;

  'treasury'(overrides?: CallOverrides): Promise<string>;

  'treasury()'(overrides?: CallOverrides): Promise<string>;

  'callStatic': {
    buy(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    'buy(address,uint256,address,uint256,bytes32)'(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: CallOverrides,
    ): Promise<void>;

    config(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [string, BigNumber, boolean] & {
        id: string;
        price: BigNumber;
        inStock: boolean;
      }
    >;

    'config(address,uint256)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<
      [string, BigNumber, boolean] & {
        id: string;
        price: BigNumber;
        inStock: boolean;
      }
    >;

    orderId(overrides?: CallOverrides): Promise<BigNumber>;

    'orderId()'(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    'owner()'(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>;

    setInStock(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setInStock(address,uint256,bool)'(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: CallOverrides,
    ): Promise<void>;

    setPrice(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    'setPrice(address,uint256,uint256)'(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    setProducts(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: CallOverrides,
    ): Promise<void>;

    'setProducts(address,tuple[])'(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: CallOverrides,
    ): Promise<void>;

    setTreasury(_treasury: string, overrides?: CallOverrides): Promise<void>;

    'setTreasury(address)'(
      _treasury: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    treasury(overrides?: CallOverrides): Promise<string>;

    'treasury()'(overrides?: CallOverrides): Promise<string>;
  };

  'filters': {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null,
    ): EventFilter;

    PrintOrderReceived(
      _orderId: BigNumberish | null,
      _orderHash: BytesLike | null,
      _productId: null,
      _collection: null,
      _tokenId: null,
    ): EventFilter;
  };

  'estimateGas': {
    buy(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    'buy(address,uint256,address,uint256,bytes32)'(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<BigNumber>;

    config(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'config(address,uint256)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    orderId(overrides?: CallOverrides): Promise<BigNumber>;

    'orderId()'(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    'renounceOwnership()'(overrides?: Overrides): Promise<BigNumber>;

    setInStock(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'setInStock(address,uint256,bool)'(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    setPrice(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'setPrice(address,uint256,uint256)'(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    setProducts(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'setProducts(address,tuple[])'(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<BigNumber>;

    setTreasury(_treasury: string, overrides?: Overrides): Promise<BigNumber>;

    'setTreasury(address)'(
      _treasury: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<BigNumber>;

    treasury(overrides?: CallOverrides): Promise<BigNumber>;

    'treasury()'(overrides?: CallOverrides): Promise<BigNumber>;
  };

  'populateTransaction': {
    buy(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    'buy(address,uint256,address,uint256,bytes32)'(
      _currency: string,
      _productIndex: BigNumberish,
      _collection: string,
      _tokenId: BigNumberish,
      _orderHash: BytesLike,
      overrides?: PayableOverrides,
    ): Promise<PopulatedTransaction>;

    config(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'config(address,uint256)'(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    orderId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'orderId()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    'renounceOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>;

    setInStock(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setInStock(address,uint256,bool)'(
      _currency: string,
      _productIndex: BigNumberish,
      _inStock: boolean,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    setPrice(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setPrice(address,uint256,uint256)'(
      _currency: string,
      _productIndex: BigNumberish,
      _price: BigNumberish,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    setProducts(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setProducts(address,tuple[])'(
      _currency: string,
      _products: { id: string; price: BigNumberish; inStock: boolean }[],
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    setTreasury(
      _treasury: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'setTreasury(address)'(
      _treasury: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides,
    ): Promise<PopulatedTransaction>;

    treasury(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'treasury()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
